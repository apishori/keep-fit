{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ayushi/Documents/keep-fit/frontend/src/Cals.js\";\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nvar Stack = createStackNavigator();\n\nvar ExerciseList = function ExerciseList() {\n  var navigation = useNavigation();\n  var EXERCISEDATA = [{\n    name: 'Swimming'\n  }, {\n    name: 'Biking'\n  }, {\n    name: 'Running'\n  }];\n\n  var ItemSeperator = function ItemSeperator() {\n    return React.createElement(View, {\n      borderStyle: \"solid\",\n      style: styles.itemSeparator,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }\n    });\n  };\n\n  var Item = function Item(_ref) {\n    var item = _ref.item;\n    return React.createElement(Pressable, {\n      style: styles.goTo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, item.name), React.createElement(Button, {\n      title: \"Go to counter\",\n      onPress: function onPress() {\n        return navigation.navigate('counter');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, React.createElement(Item, {\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }));\n  };\n\n  return React.createElement(FlatList, {\n    data: EXERCISEDATA,\n    renderItem: renderItem,\n    ItemSeparatorComponent: ItemSeperator,\n    style: styles.exerciseList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  });\n};\n\nvar Timer = function Timer(_ref3) {\n  var timeInHours = _ref3.timeInHours,\n      setTimeInHours = _ref3.setTimeInHours;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      seconds = _useState2[0],\n      setSeconds = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      minutes = _useState4[0],\n      setMinutes = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hours = _useState6[0],\n      setHours = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isTiming = _useState8[0],\n      setIsTiming = _useState8[1];\n\n  useEffect(function () {\n    if (isTiming) {\n      var updateTimer = setInterval(function () {\n        if (seconds != 59) {\n          setSeconds(seconds + 1);\n        } else {\n          setSeconds(0);\n\n          if (minutes != 59) {\n            setMinutes(minutes + 1);\n          } else {\n            setMinutes(0);\n\n            if (hours != 24) {\n              setHours(hours + 1);\n            } else {}\n          }\n        }\n\n        setTimeInHours(timeInHours + 1 / 3600);\n      }, 1000);\n      return function () {\n        return clearInterval(updateTimer);\n      };\n    }\n  });\n\n  var resetTimer = function resetTimer() {\n    setIsTiming(false);\n    setHours(0);\n    setMinutes(0);\n    setSeconds(0);\n  };\n\n  var timeFormat = new Intl.NumberFormat(undefined, {\n    minimumIntegerDigits: 2\n  });\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }\n  }, timeFormat.format(hours), \":\", timeFormat.format(minutes), \":\", timeFormat.format(seconds)), React.createElement(Button, {\n    title: \"Start\",\n    onPress: function onPress() {\n      return setIsTiming(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    title: \"Pause\",\n    onPress: function onPress() {\n      return setIsTiming(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    title: \"Stop\",\n    onPress: function onPress() {\n      return resetTimer();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }\n  }));\n};\n\nvar CalorieCounter = function CalorieCounter() {\n  var navigation = useNavigation();\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      timeInHours = _useState10[0],\n      setTimeInHours = _useState10[1];\n\n  var caloriesBurned = timeInHours;\n  return React.createElement(React.Fragment, null, React.createElement(Timer, {\n    timeInHours: timeInHours,\n    setTimeInHours: setTimeInHours,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }\n  }, \"Exercise: \", \"Calories burnt so far: \", caloriesBurned.toFixed(4), React.createElement(Button, {\n    title: \"Reset calories\",\n    onPress: function onPress() {\n      return setTimeInHours(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  })), React.createElement(Button, {\n    title: \"Back to exercise list\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 4\n    }\n  }));\n};\n\nfunction Cals() {\n  var _useState11 = useState(-1),\n      _useState12 = _slicedToArray(_useState11, 2),\n      exerciseID = _useState12[0],\n      setExercise = _useState12[1];\n\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"exerciseList\",\n    component: ExerciseList,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"counter\",\n    component: CalorieCounter,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }\n  }));\n}\n\n;\nvar styles = StyleSheet.create({\n  exerciseList: {\n    flex: 6,\n    padding: 15\n  },\n  itemSeparator: {\n    height: 1,\n    width: '95%'\n  },\n  entry: {\n    flexDirection: 'row'\n  }\n});\nexport default Cals;","map":{"version":3,"sources":["/Users/ayushi/Documents/keep-fit/frontend/src/Cals.js"],"names":["React","createContext","useEffect","useState","useNavigation","createStackNavigator","Stack","ExerciseList","navigation","EXERCISEDATA","name","ItemSeperator","styles","itemSeparator","Item","item","goTo","navigate","renderItem","exerciseList","Timer","timeInHours","setTimeInHours","seconds","setSeconds","minutes","setMinutes","hours","setHours","isTiming","setIsTiming","updateTimer","setInterval","clearInterval","resetTimer","timeFormat","Intl","NumberFormat","undefined","minimumIntegerDigits","format","CalorieCounter","caloriesBurned","toFixed","goBack","Cals","exerciseID","setExercise","headerShown","StyleSheet","create","flex","padding","height","width","entry","flexDirection"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,oBAAT,QAAqC,yBAArC;;AAGA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;AAEA,IAAME,YAAY,GAAE,SAAdA,YAAc,GAAM;AACzB,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;AACA,MAAMK,YAAY,GAAG,CACpB;AACCC,IAAAA,IAAI,EAAE;AADP,GADoB,EAIpB;AACCA,IAAAA,IAAI,EAAE;AADP,GAJoB,EAOpB;AACCA,IAAAA,IAAI,EAAE;AADP,GAPoB,CAArB;;AAYA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WACpB,oBAAC,IAAD;AACC,MAAA,WAAW,EAAC,OADb;AAEC,MAAA,KAAK,EAAEC,MAAM,CAACC,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB;AAAA,GAAtB;;AAOA,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WACZ,oBAAC,SAAD;AACC,MAAA,KAAK,EAAEH,MAAM,CAACI,IADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGED,IAAI,CAACL,IAHP,CAHD,EAQU,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,eADV;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMF,UAAU,CAACS,QAAX,CAAoB,SAApB,CAAN;AAAA,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARV,CADY;AAAA,GAAb;;AAgBA,MAAMC,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXH,IAAW,SAAXA,IAAW;AAChC,WACU,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,oBAAC,IAAD;AACR,MAAA,IAAI,EAAEA,IADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADV;AASA,GAVD;;AAYA,SAEW,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEN,YADV;AAEI,IAAA,UAAU,EAAES,UAFhB;AAGR,IAAA,sBAAsB,EAAEP,aAHhB;AAIR,IAAA,KAAK,EAAEC,MAAM,CAACO,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFX;AAUA,CA3DD;;AA6DA,IAAMC,KAAK,GAAG,SAARA,KAAQ,QAAqC;AAAA,MAAlCC,WAAkC,SAAlCA,WAAkC;AAAA,MAArBC,cAAqB,SAArBA,cAAqB;;AAAA,kBACpBnB,QAAQ,CAAC,CAAD,CADY;AAAA;AAAA,MAC3CoB,OAD2C;AAAA,MAClCC,UADkC;;AAAA,mBAEpBrB,QAAQ,CAAC,CAAD,CAFY;AAAA;AAAA,MAE3CsB,OAF2C;AAAA,MAElCC,UAFkC;;AAAA,mBAGxBvB,QAAQ,CAAC,CAAD,CAHgB;AAAA;AAAA,MAG3CwB,KAH2C;AAAA,MAGpCC,QAHoC;;AAAA,mBAIlBzB,QAAQ,CAAC,KAAD,CAJU;AAAA;AAAA,MAI3C0B,QAJ2C;AAAA,MAIjCC,WAJiC;;AAMlD5B,EAAAA,SAAS,CAAC,YAAM;AACf,QAAI2B,QAAJ,EAAc;AACb,UAAME,WAAW,GAAGC,WAAW,CAAC,YAAM;AACrC,YAAIT,OAAO,IAAI,EAAf,EAAmB;AAClBC,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACA,SAFD,MAGK;AACJC,UAAAA,UAAU,CAAC,CAAD,CAAV;;AACA,cAAIC,OAAO,IAAI,EAAf,EAAmB;AAClBC,YAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACA,WAFD,MAGK;AACJC,YAAAA,UAAU,CAAC,CAAD,CAAV;;AACA,gBAAIC,KAAK,IAAI,EAAb,EAAiB;AAChBC,cAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,aAFD,MAGK,CAEJ;AACD;AACD;;AACDL,QAAAA,cAAc,CAACD,WAAW,GAAG,IAAE,IAAjB,CAAd;AACA,OApB8B,EAoB5B,IApB4B,CAA/B;AAsBA,aAAO;AAAA,eAAMY,aAAa,CAACF,WAAD,CAAnB;AAAA,OAAP;AACA;AACD,GA1BQ,CAAT;;AA4BA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACxBJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAF,IAAAA,UAAU,CAAC,CAAD,CAAV;AACA,GALD;;AAOA,MAAMW,UAAU,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsBC,SAAtB,EAAiC;AAAEC,IAAAA,oBAAoB,EAAE;AAAxB,GAAjC,CAAnB;AAEA,SACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,UAAU,CAACK,MAAX,CAAkBb,KAAlB,CADF,OAC6BQ,UAAU,CAACK,MAAX,CAAkBf,OAAlB,CAD7B,OAC0DU,UAAU,CAACK,MAAX,CAAkBjB,OAAlB,CAD1D,CADD,EAIC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,OADP;AAEC,IAAA,OAAO,EAAE;AAAA,aAAMO,WAAW,CAAC,IAAD,CAAjB;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAQC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,OADP;AAEC,IAAA,OAAO,EAAE;AAAA,aAAMA,WAAW,CAAC,KAAD,CAAjB;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,EAYC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,MADP;AAEC,IAAA,OAAO,EAAE;AAAA,aAAMI,UAAU,EAAhB;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZD,CADD;AAmBA,CA9DD;;AAgEA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC5B,MAAMjC,UAAU,GAAGJ,aAAa,EAAhC;;AAD4B,mBAGUD,QAAQ,CAAC,CAAD,CAHlB;AAAA;AAAA,MAGrBkB,WAHqB;AAAA,MAGRC,cAHQ;;AAK5B,MAAMoB,cAAc,GAAsBrB,WAA1C;AAEA,SACC,0CACC,oBAAC,KAAD;AACC,IAAA,WAAW,EAAEA,WADd;AAEC,IAAA,cAAc,EAAEC,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAKC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEyBoB,cAAc,CAACC,OAAf,CAAuB,CAAvB,CAFzB,EAGC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,gBADP;AAEC,IAAA,OAAO,EAAE;AAAA,aAAMrB,cAAc,CAAC,CAAD,CAApB;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CALD,EAaC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,uBADP;AAEC,IAAA,OAAO,EAAE;AAAA,aAAMd,UAAU,CAACoC,MAAX,EAAN;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,CADD;AAoBA,CA3BD;;AA6BA,SAASC,IAAT,GAAgB;AAAA,oBACmB1C,QAAQ,CAAC,CAAC,CAAF,CAD3B;AAAA;AAAA,MACR2C,UADQ;AAAA,MACIC,WADJ;;AAGf,SACC,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD,CAAO,MAAP;AACC,IAAA,IAAI,EAAC,cADN;AACqB,IAAA,SAAS,EAAExC,YADhC;AAC8C,IAAA,OAAO,EAAE;AAACyC,MAAAA,WAAW,EAAC;AAAb,KADvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAIC,oBAAC,KAAD,CAAO,MAAP;AACC,IAAA,IAAI,EAAC,SADN;AACgB,IAAA,SAAS,EAAEP,cAD3B;AAC2C,IAAA,OAAO,EAAE;AAACO,MAAAA,WAAW,EAAC;AAAb,KADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CADD;AAUA;;AAAA;AAED,IAAMpC,MAAM,GAAGqC,UAAU,CAACC,MAAX,CAAkB;AAC7B/B,EAAAA,YAAY,EAAE;AACVgC,IAAAA,IAAI,EAAE,CADI;AAEhBC,IAAAA,OAAO,EAAE;AAFO,GADe;AAK7BvC,EAAAA,aAAa,EAAE;AACjBwC,IAAAA,MAAM,EAAE,CADS;AAEXC,IAAAA,KAAK,EAAE;AAFI,GALc;AAS7BC,EAAAA,KAAK,EAAE;AAETC,IAAAA,aAAa,EAAE;AAFN;AATsB,CAAlB,CAAf;AAeA,eAAeX,IAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Button, FlatList } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Pressable } from 'react-native';\n\nconst Stack = createStackNavigator();\n\nconst ExerciseList= () => {\n\tconst navigation = useNavigation();\n\tconst EXERCISEDATA = [\n\t\t{\n\t\t\tname: 'Swimming'\n\t\t},\n\t\t{\n\t\t\tname: 'Biking'\n\t\t},\n\t\t{\n\t\t\tname: 'Running'\n\t\t},\n\t];\n\t\n\tconst ItemSeperator = () => (\n\t\t\t<View\n\t\t\t\tborderStyle='solid'\n\t\t\t\tstyle={styles.itemSeparator}\n\t\t\t/>\n\t);\n\n\tconst Item = ({ item }) => (\n\t\t<Pressable\n\t\t\tstyle={styles.goTo}\n\t\t>\n\t\t\t<Text\n\t\t\t\t\t//styles={styles.}\n\t\t\t>\n\t\t\t\t{item.name}\n\t\t\t</Text>\n            <Button\n                title='Go to counter'\n                onPress={() => navigation.navigate('counter')} // TODO: add params later\n            />\n\t\t</Pressable>\n\t);\n\n\tconst renderItem = ({ item }) => {\n\t\treturn (\n            <View\n\t\t\t\t//style={styles.entry}\n\t\t\t>\n               <Item\n\t\t\t   \titem={item}\n\t\t\t   />\n            </View>\n\t\t);\n\t};\n\n\treturn (\n        //<View style={styles.ExerciseList}>\n            <FlatList\n                data={EXERCISEDATA}\n                renderItem={renderItem}\n\t\t\t\tItemSeparatorComponent={ItemSeperator}\n\t\t\t\tstyle={styles.exerciseList}\n            />\t\n        //</View>\t\n\t);\n};\n\nconst Timer = ({ timeInHours, setTimeInHours }) => {\n\tconst [seconds, setSeconds] = useState(0);\n\tconst [minutes, setMinutes] = useState(0);\n\tconst [hours, setHours] = useState(0);\n\tconst [isTiming, setIsTiming] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (isTiming) {\n\t\t\tconst updateTimer = setInterval(() => {\n\t\t\t\tif (seconds != 59) {\n\t\t\t\t\tsetSeconds(seconds + 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetSeconds(0);\n\t\t\t\t\tif (minutes != 59) {\n\t\t\t\t\t\tsetMinutes(minutes + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsetMinutes(0);\n\t\t\t\t\t\tif (hours != 24) {\n\t\t\t\t\t\t\tsetHours(hours + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// need to create a message about max time\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetTimeInHours(timeInHours + 1/3600);\n\t\t\t}, 1000);\n\t\t\n\t\t\treturn () => clearInterval(updateTimer);\n\t\t}\n\t});\n\n\tconst resetTimer = () => {\n\t\tsetIsTiming(false);\n\t\tsetHours(0);\n\t\tsetMinutes(0);\n\t\tsetSeconds(0);\n\t}\n\n\tconst timeFormat = new Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 });\n\t\n\treturn (\n\t\t<View>\n\t\t\t<Text>\n\t\t\t\t{timeFormat.format(hours)}:{timeFormat.format(minutes)}:{timeFormat.format(seconds)}\n\t\t\t</Text>\n\t\t\t<Button\n\t\t\t\ttitle='Start'\n\t\t\t\tonPress={() => setIsTiming(true)}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\ttitle='Pause'\n\t\t\t\tonPress={() => setIsTiming(false)}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\ttitle='Stop'\n\t\t\t\tonPress={() => resetTimer()}\n\t\t\t/>\n\t\t</View>\n\t);\n};\n\nconst CalorieCounter = () => {\n\tconst navigation = useNavigation();\n\n\tconst [timeInHours, setTimeInHours] = useState(0); // dummy val\n\t// TODO: get MET values & might have to use gender as well\n\tconst caloriesBurned = /*weight * MET **/ timeInHours;\n\t\n\treturn (\n\t\t<>\n\t\t\t<Timer\n\t\t\t\ttimeInHours={timeInHours}\n\t\t\t\tsetTimeInHours={setTimeInHours}\n\t\t\t/>\n\t\t\t<Text>\n\t\t\t\tExercise: {}\n\t\t\t\tCalories burnt so far: {caloriesBurned.toFixed(4)}\n\t\t\t\t<Button\n\t\t\t\t\ttitle='Reset calories'\n\t\t\t\t\tonPress={() => setTimeInHours(0)}\n\t\t\t\t/>\n\t\t\t</Text>\n\t\t\t<Button\n\t\t\t\ttitle='Back to exercise list'\n\t\t\t\tonPress={() => navigation.goBack()}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nfunction Cals() {\n\tconst [exerciseID, setExercise] = useState(-1);\n\n\treturn (\n\t\t<Stack.Navigator>\n\t\t\t<Stack.Screen\n\t\t\t\tname='exerciseList' component={ExerciseList} options={{headerShown:false}}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname='counter' component={CalorieCounter} options={{headerShown:false}}\n\t\t\t/>\n\t\t</Stack.Navigator>\n\t);\n};\n\nconst styles = StyleSheet.create({\n    exerciseList: {\n        flex: 6,\n\t\tpadding: 15\n    },\n    itemSeparator: {\n\t\theight: 1,\n        width: '95%'\n    },\n    entry: {\n        /*flex: ,*/\n\t\tflexDirection: 'row'\n    },\n});\n\nexport default Cals;"]},"metadata":{},"sourceType":"module"}